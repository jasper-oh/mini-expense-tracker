name: Test Suite

on:
    push:
        branches: ['**']
    pull_request:
        branches: [main]

jobs:
    test-frontend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'
                  cache-dependency-path: './frontend/package-lock.json'

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm run test:coverage

            - name: Upload coverage reports
              uses: codecov/codecov-action@v3
              with:
                  directory: ./frontend/coverage
                  flags: frontend
                  name: frontend-coverage

    test-backend:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  cache: 'npm'
                  cache-dependency-path: './backend/package-lock.json'

            - name: Install dependencies
              run: npm ci

            - name: Run tests
              run: npm test

            - name: Run tests with coverage
              run: npm run test:coverage
              continue-on-error: true

    test-integration:
        runs-on: ubuntu-latest
        needs: [test-frontend, test-backend]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'

            - name: Install frontend dependencies
              working-directory: ./frontend
              run: npm ci

            - name: Install backend dependencies
              working-directory: ./backend
              run: npm ci

            - name: Run integration tests
              run: |
                  cd backend && npm run test:functional &
                  cd frontend && npm run test:unit
                  wait
              continue-on-error: true
